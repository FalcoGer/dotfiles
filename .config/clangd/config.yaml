# https://clangd.llvm.org/config.html

CompileFlags:
  Add: [
    -std=c++23,
    -stdlib=libc++,
    -flto=full,
    -fvirtual-function-elimination,
    -L/usr/lib/llvm-19/lib,
    -fexperimental-library,
    -fopenmp,
    -Wall,
    -Wextra,
    -Wpedantic,
    -Wdouble-promotion,
    -Wformat=2,
    -Wformat-nonliteral,
    -Wformat-y2k,
    -Wnull-dereference,
    -Wimplicit-fallthrough,
    -Wmissing-include-dirs,
    -Wswitch-default,
    -Wswitch-enum,
    -Wswitch-bool,
    -Wcovered-switch-default,
    -Wunused-parameter,
    -Wuninitialized,
    -Walloca,
    -Wconversion,
    -Wfloat-conversion,
    -Wsign-conversion,
    -Wfloat-equal,
    -Wshadow-all,
    -Wundef,
    -Wunused-macros,
    -Wcast-qual,
    -Wcast-align,
    -Wmissing-declarations,
    -Wredundant-decls,
    -Wstack-protector,
    -fstack-protector,
    -pedantic-errors,
    -Werror=pedantic,
    -Werror=char-subscripts,
    -Werror=null-dereference,
    -Werror=dangling-gsl,
    -Werror=init-self,
    -Werror=switch,
    -Werror=switch-enum,
    -Werror=implicit-fallthrough,
    -Werror=misleading-indentation,
    -Werror=missing-braces,
    -Werror=sequence-point,
    -Werror=return-type,
    -Werror=multichar
  ]

Index:
  StandardLibrary: Yes
  Background: Build

Completion:
  AllScopes: true

Hover:
  ShowAKA: true

InlayHints:
  Designators: true
  Enabled: true
  ParameterNames: true
  DeducedTypes: true
  BlockEnd: true

# https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics
Diagnostics:
  UnusedIncludes: Strict
  ClangTidy:
    FastCheckFilter: None
    Add: [
      abseil-*,
      bugprone*,
      boost-*,
      concurrency-*,
      cppcoreguidelines-*,
      modernize-*,
      performance-*,
      portability-*,
      readability-*,
      cert-*,
      clang-analyzer-*,
      google-*,
      hicpp-*,
      linuxkernel-*,
      llvm-*,
      misc-*,
      openmp-*,
      mpi-*
    ]
    Remove: [
      readability-avoid-const-params-in-decls, # const in parameter in function declarations is useful for header files.
      misc-unused-parameters, # caught by -Wunused-parameter
      cppcoreguidelines-avoid-do-while, # annoying, do-while might be useful.
      google-objc-*, # not doing objc
      # bugprone-easily-swappable-parameters, # annoying. setPos(int x, int y) is flagged

      # keep it in, use c++ random number generation facilities.
      # cert-msc50-cpp, # allow the use of std::rand()

      google-readability-todo, # todos don't need a username or bug number in my code
      portability-restrict-system-includes, # disallows the use of headers specific to one OS
      fuchsia-*, # disallows many features that are standard in c++ (operator overloading, default arguments)
      cert-dcl03-c, # alias for misc-static-assert
      cert-dcl16-c, # alias for readability-uppercase-literal-suffix
      cert-dcl37-c, # alias for bugprone-reserved-identifier
      cert-dcl51-cpp, # alias for bugprone-reserved-identifier
      cert-dcl54-cpp, # alias for misc-new-delete-overloads
      cert-dcl59-cpp, # alias for google-build-namespaces
      cert-err09-cpp, # alias for misc-throw-by-value-catch-by-reference
      cert-err61-cpp, # alias for misc-throw-by-value-catch-by-reference
      cert-exp42-c, # alias for bugprone-suspicious-memory-comparison
      cert-fio38-c, # alias for misc-non-copyable-objects
      cert-flp37-c, # alias for bugprone-suspicious-memory-comparison
      cert-msc24-c, # alias for bugprone-unsafe-functions
      cert-msc30-c, # alias for cert-msc50-cpp
      cert-msc32-c, # alias for cert-msc51-cpp
      cert-msc33-c, # alias for bugprone-unsafe-functions
      cert-msc54-cpp, # alias for bugprone-signal-handler
      cert-oop11-cpp, # alias for performance-move-constructor-init
      cert-oop54-cpp, # alias for bugprone-unhandled-self-assignment
      cert-pos44-c, # alias for bugprone-bad-signal-to-kill-thread
      cert-pos47-c, # alias for concurrency-thread-canceltype-asynchronous
      cert-sig30-c, # alias for bugprone-signal-handler
      cert-str34-c, # alias for bugprone-signed-char-misuse
      bugprone-narrowing-conversions, # alias for cppcoreguidelines-narrowing-conversions
      cppcoreguidelines-avoid-c-arrays, # alias for modernize-avoid-c-arrays
      cppcoreguidelines-avoid-magic-numbers, # alias for readability-magic-numbers
      cppcoreguidelines-c-copy-assignment-signature, # alias for misc-unconventional-assign-operator
      cppcoreguidelines-explicit-virtual-functions, # alias for modernize-use-override
      cppcoreguidelines-noexcept-destructor, # alias for performance-noexcept-destructor
      cppcoreguidelines-noexcept-move-operations, # alias for performance-noexcept-move-constructor
      cppcoreguidelines-noexcept-swap, # alias for performance-noexcept-swap
      cppcoreguidelines-non-private-member-variables-in-classes, # alias for misc-non-private-member-variables-in-classes
      cppcoreguidelines-use-default-member-init, # alias for modernize-use-default-member-init
      google-readability-braces-around-statements, # alias for readability-braces-around-statements
      google-readability-function-size, # alias for readability-function-size
      google-readability-namespace-comments, # alias for llvm-namespace-comment
      hicpp-avoid-c-arrays, # alias for modernize-avoid-c-arrays
      hicpp-avoid-goto, # alias for cppcoreguidelines-avoid-goto
      hicpp-braces-around-statements, # alias for readability-braces-around-statements
      hicpp-deprecated-headers, # alias for modernize-deprecated-headers
      hicpp-explicit-conversions, # alias for google-explicit-constructor
      hicpp-function-size, # alias for readability-function-size
      hicpp-invalid-access-moved, # alias for bugprone-use-after-move
      hicpp-member-init, # alias for cppcoreguidelines-pro-type-member-init
      hicpp-move-const-arg, # alias for performance-move-const-arg
      hicpp-named-parameter, # alias for readability-named-parameter
      hicpp-new-delete-operators, # alias for misc-new-delete-overloads
      hicpp-no-array-decay, # alias for cppcoreguidelines-pro-bounds-array-to-pointer-decay
      hicpp-no-malloc, # alias for cppcoreguidelines-no-malloc
      hicpp-noexcept-move, # alias for performance-noexcept-move-constructor
      hicpp-special-member-functions, # alias for cppcoreguidelines-special-member-functions
      hicpp-static-assert, # alias for misc-static-assert
      hicpp-undelegated-constructor, # alias for bugprone-undelegated-constructor
      hicpp-uppercase-literal-suffix, # alias for readability-uppercase-literal-suffix
      hicpp-use-auto, # alias for modernize-use-auto
      hicpp-use-emplace, # alias for modernize-use-emplace
      hicpp-use-equals-default, # alias for modernize-use-equals-default
      hicpp-use-equals-delete, # alias for modernize-use-equals-delete
      hicpp-use-noexcept, # alias for modernize-use-noexcept
      hicpp-use-nullptr, # alias for modernize-use-nullptr
      hicpp-use-override, # alias for modernize-use-override
      hicpp-vararg, # alias for cppcoreguidelines-pro-type-vararg
      llvm-else-after-return, # alias for readability-else-after-return
      llvm-qualified-auto # alias for readability-qualified-auto
    ]
    CheckOptions:
      modernize-use-auto.MinTypeNameLength: 10
      modernize-use-auto.RemoveStars: 0
      hicpp-multiway-paths-covered.WarnOnMissingElse: true
      hicpp-signed-bitwise.IgnorePositiveIntegerLiterals: true
      llvm-namespace-comment.ShortNamespaceLines: 10
      misc-non-private-member-variables-in-classes.IgnorePublicMemberVariables: true
      misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic: false
      portability-simd-intrinsics.Suggest: true
      misc-const-correctness.AnalyzeValues: true
      misc-const-correctness.AnalyzeReferences: true
      misc-const-correctness.WarnPointersAsValues: true
      misc-const-correctness.TransformValues: true
      misc-const-correctness.TransformReferences: true
      misc-const-correctness.TransformPointersAsValues: true
      readability-redundant-inline-specifier.StrictMode: true
      readability-identifier-length.MinimumVariableNameLength: 0
      readability-identifier-length.IgnoredVariableNames: "^([XYZxyzit]|id|it)$"
      readability-identifier-length.MinimumLoopCounterNameLength: 3
      readability-identifier-length.IgnoredLoopCounterNames: "^([ijkxyz_]|idx|it)$"
      readability-identifier-length.MinimumExceptionNameLength: 2
      readability-identifier-length.IgnoredExceptionVariableNames: "^(e|ex)$"
      readability-identifier-length.MinimumParameterNameLength: 3
      readability-identifier-length.IgnoredParameterNames: "^([XYZxyzit]|id)$"
      readability-identifier-naming.AbstractClassCase: CamelCase
      readability-identifier-naming.ClassCase: CamelCase
      readability-identifier-naming.ClassConstantCase: UPPER_CASE
      readability-identifier-naming.ClassMemberCase: camelBack
      readability-identifier-naming.ClassMethodCase: CamelCase
      readability-identifier-naming.ConstantCase: UPPER_CASE
      readability-identifier-naming.ConstantMemberCase: UPPER_CASE
      readability-identifier-naming.ConstantParameterCase: UPPER_CASE
      readability-identifier-naming.ConstantPointerParameterCase: camelBack
      readability-identifier-naming.ConstantPointerParameterPrefix: "ptr_"
      readability-identifier-naming.ConstexprFunctionCase: camelBack
      readability-identifier-naming.ConstexprMethodCase: camelBack
      readability-identifier-naming.ConstexprVariableCase: UPPER_CASE
      readability-identifier-naming.EnumCase: CamelCase
      readability-identifier-naming.EnumPrefix: "E"
      readability-identifier-naming.EnumConstantCase: UPPER_CASE
      readability-identifier-naming.FunctionCase: camelBack
      readability-identifier-naming.GlobalConstantCase: UPPER_CASE
      readability-identifier-naming.GlobalConstantPointerCase: UPPER_CASE
      readability-identifier-naming.GlobalConstantPointerPrefix: "gptr_"
      readability-identifier-naming.GlobalFunctionCase: camelBack
      readability-identifier-naming.GlobalPointerCase: camelBack
      readability-identifier-naming.GlobalPointerPrefix: "gptr_"
      readability-identifier-naming.GlobalVariableCase: camelBack
      readability-identifier-naming.GlobalVariablePrefix: "g_"
      readability-identifier-naming.InlineNamespaceCase: CamelCase
      readability-identifier-naming.LocalConstantCase: UPPER_CASE
      readability-identifier-naming.LocalConstantPointerCase: camelBack
      readability-identifier-naming.LocalConstantPointerPrefix: "ptr_"
      readability-identifier-naming.LocalPointerCase: camelBack
      readability-identifier-naming.LocalPointerPrefix: "ptr_"
      readability-identifier-naming.LocalVariableCase: camelBack
      readability-identifier-naming.MacroDefinitionCase: UPPER_CASE
      readability-identifier-naming.MemberCase: camelBack
      readability-identifier-naming.MethodCase: CamelCase
      readability-identifier-naming.NamespaceCase: CamelCase
      readability-identifier-naming.ParameterCase: camelBack
      readability-identifier-naming.ParameterPackCase: camelBack
      readability-identifier-naming.PointerParameterCase: camelBack
      readability-identifier-naming.PointerParameterPrefix: "ptr_"
      readability-identifier-naming.PrivateMemberCase: camelBack
      readability-identifier-naming.PrivateMemberPrefix: "m_"
      readability-identifier-naming.PrivateMethodCase: camelBack
      readability-identifier-naming.ProtectedMemberCase: camelBack
      readability-identifier-naming.ProtectedMemberPrefix: "m_"
      readability-identifier-naming.ProtectedMethodCase: camelBack
      readability-identifier-naming.PublicMemberCase: camelBack
      readability-identifier-naming.PublicMemberPrefix: "m_"
      readability-identifier-naming.PublicMethodCase: camelBack
      readability-identifier-naming.ScopedEnumConstantCase: UPPER_CASE
      readability-identifier-naming.StaticConstantCase: UPPER_CASE
      readability-identifier-naming.StaticVariableCase: camelBack
      readability-identifier-naming.StructCase: CamelCase
      readability-identifier-naming.TemplateParameterCase: CamelCase
      readability-identifier-naming.TypeAliasCase: CamelCase
      readability-identifier-naming.TypedefCase: CamelCase
      readability-identifier-naming.TypeTemplateParameterCase: CamelCase
      readability-identifier-naming.UnionCase: CamelCase
      readability-identifier-naming.ValueTemplateParameterCase: camelBack
      readability-identifier-naming.VariableCase: camelBack
      readability-identifier-naming.VirtualMethodCase: camelBack
