{
    "coc.preferences.formatOnType": true,
    "coc.preferences.promptInput": true,
    "coc.preferences.enableMarkdown": true,
    "coc.preferences.extensionUpdateCheck": "daily",
    "coc.preferences.silentAutoupdate": false,
    "coc.preferences.enableMessageDialog": true,
    "coc.preferences.enableLinkedEditing": true,

    "ltex.enabled": [
        "bibtex",
        "context",
        "context.tex",
        "html",
        "latex",
        "markdown",
        "org",
        "restructuredtext",
        "rsweave",

        "text",

        "shellscript",
        "c",
        "csharp",
        "cpp",
        "javascript",
        "lua",
        "perl",
        "php",
        "powershell",
        "python",
        "ruby",
        "rust",
        "sql",
        "verilog",
        "vb"
    ],
    "ltex.language": "en-US",
    "ltex.sentenceCacheSize": 2000,
    "ltex.dictionary": {
        "en-US": [
            ":${userHome}/.vim/ltex/dict/en_US.txt"
        ],
        "de-DE": [
            ":${userHome}/.vim/ltex/dict/de_DE.txt"
        ],
        "en-GB": [
            ":${userHome}/.vim/ltex/dict/en_GB.txt"
        ]
    },
    "ltex.enabledRules": {
        "en-US": [
            ":${userHome}/.vim/ltex/enabled/en_US.txt"
        ],
        "de-DE": [
            ":${userHome}/.vim/ltex/enabled/de_DE.txt"
        ],
        "en-GB": [
            ":${userHome}/.vim/ltex/enabled/en_GB.txt"
        ]
    },
    "ltex.disabledRules": {
        "en-US": [
            "EN_QUOTES",
            ":${userHome}/.vim/ltex/disabled/en_US.txt"
        ],
        "de-DE": [
            "EN_QUOTES",
            ":${userHome}/.vim/ltex/disabled/de_DE.txt"
        ],
        "en-GB": [
            "EN_QUOTES",
            ":${userHome}/.vim/ltex/disabled/en_GB.txt"
        ]
    },
    "ltex.hiddenFalsePositives": {
        "en-US": [
            ":${userHome}/.vim/ltex/hidden/en_US.txt"
        ],
        "de-DE": [
            ":${userHome}/.vim/ltex/hidden/de_DE.txt"
        ],
        "en-GB": [
            ":${userHome}/.vim/ltex/hidden/en_GB.txt"
        ]
    },
    "ltex.configurationTarget": {
        "dictionary": "user",
        "disabledRules": "user",
        "hiddenFalsePositives": "user"
    },
    "ltex.additionalRules.enablePickyRules": true,
    // "ltex.additionalRules.motherTongue": "de-DE",
    "ltex.ltex-ls.logLevel": "warning",
    "ltex.completionEnabled": true,
    "ltex.diagnosticSeverity": {"PASSIVE_VOICE": "hint", "default": "information"},
    "ltex.checkFrequency": "edit",
    "ltex.clearDiagnosticsWhenClosingFile": true,
    "ltex.statusBarItem": false,
    "ltex.trace.server": "off",

    "diagnostic.enable": true,
    "diagnostic.errorSign": "󰡅 ",
    "diagnostic.warningSign": " ",
    "diagnostic.infoSign": " ",
    "diagnostic.hintSign": "󰌵 ",
    "diagnostic.messageTarget": "float",
    "diagnostic.separateRelatedInformationAsDiagnostics": true,
    "diagnostic.virtualText": false,
    "diagnostic.virtualTextAlign": "after",
    "diagnostic.virtualTextPrefix": "// ",
    "diagnostic.virtualTextLines": 3,
    "diagnostic.virtualTextCurrentLineOnly": true,
    
    "languageserver": {
        "clangd": {
            "command": "clangd",
            "filetypes": [
                "c",
                "cpp"
            ],
            "rootPatterns": [
                "compile_flags.txt",
                "compile_commands.json"
            ],
            "args": [
                "--enable-config",
                "--clang-tidy",
                "--all-scopes-completion",
                "--background-index",
                "--completion-style=bundled",
                "--function-arg-placeholders=1",
                "--header-insertion=iwyu",
                "--header-insertion-decorators",
                "--limit-results=500"
            ]
        },
        "bash": {
            "command": "bash-language-server",
            "args": [
                "start"
            ],
            "filetypes": [
                "sh"
            ]
        },
        "dockerfile": {
            "command": "docker-langserver",
            "filetypes": [
                "dockerfile"
            ],
            "args": [
                "--stdio"
            ]
        },
        "intelephense": {
            "command": "intelephense",
            "args": [
                "--stdio"
            ],
            "filetypes": [
                "php"
            ],
            "initializationOptions": {
                "storagePath": "/tmp/intelephense"
            }
        },
        "sql": {
            "command": "/usr/local/bin/sql-language-server",
            "args": [
                "up",
                "--method",
                "stdio"
            ],
            "filetypes": [
                "sql",
                "mysql"
            ],
            "settings": {
                "sqlLanguageServer": {
                    "connections": [
                        {
                            "name": "pi.lan",
                            "adapter": "mysql",
                            "host": "localhost",
                            "port": 3306,
                            "__comment_GRANTS__": [
                                "GRANT SELECT, SHOW DATABASES, SHOW VIEW ON *.* TO 'sqlls'@'localhost';",
                                "GRANT SHOW_ROUTINE ON *.* TO 'sqlls'@'localhost'"
                            ],
                            "user": "sqlls",
                            "password": "${env:SQL_LANGSERV_PASSWD}",
                            "database": "mysql",
                            "projectPaths": [
                                "/"
                            ],
                            "ssh": {
                                "user": "ubuntu",
                                "remoteHost": "pi.lan",
                                "dbHost": "127.0.0.1",
                                "port": 3306,
                                "identityFile": "${userHome}/.ssh/id_rsa"
                            }
                        }
                    ],
                    "lint": {
                        "rules": {
                            "align-column-to-the-first": "error",
                            "column-new-line": "error",
                            "linebreak-after-clause-keyword": "off",
                            "reserved-word-case": [
                                "error",
                                "upper"
                            ],
                            "space-surrounding-operators": "error",
                            "where-clause-new-line": "error",
                            "align-where-clause-to-the-first": "error"
                        }
                    }
                }
            }
        }
    },
    "workspace.rootPatterns": [
        ".git",
        ".hg",
        ".projections.json",
        "Cargo.toml"
    ],
    "workspace.ignoredFolders": [
        "$HOME",
        "$HOME/.cargo/**",
        "$HOME/.rustup/**",
        "$HOME/.cache/**"
    ],
    
    "diagnostic-languageserver.enable": true,
    "diagnostic-languageserver.trace.server": "off",
    "diagnostic-languageserver.mergeConfig": false,
    "diagnostic-languageserver.filetypes": {
        "sh": "shellcheck",
        "systemd": "systemd-analyze"
    },
    "diagnostic-languageserver.linters": {
        "shellcheck": {
            "sourceName": "shellcheck",
            "command": "shellcheck",
            "args": [
                "--format=json",
                "--enable=all",
                "--severity=style",
                "--shell=bash",
                "%file"
            ],
            "rootPatterns": [],
            "isStdout": true,
            "isStderr": false,
            "debounce": 100,
            "onSaveOnly": false,
            "offsetLine": 0,
            "offsetColumn": 0,
            "ignore": [],
            "parseJson": {
                "errorsRoot": "",
                "sourceName": null,
                "sourceNameFilter": false,
                "line": "line",
                "endLine": "endLine",
                "column": "column",
                "endColumn": "endColumn",
                "security": "level",
                "message": "${message} [${code}]"
            },
            "securities": {
                "error": "error",
                "warning": "warning",
                "note": "info",
                "style": "hint"
            }
        }
    },
    "diagnostic-languageserver.formatFiletypes": {
        "sh": "shfmt"
    },
    "diagnostic-languageserver.formatters": {
        "shfmt": {
            "command": "shfmt",
            "args": [
                "-i",
                "4",
                "-s",
                "-bn",
                "-ci",
                "-sr",
                "-fn",
                "-kp",
                "-"
            ],
            "rootPatterns": [],
            "isStdout": true,
            "isStderr": false,
            "doesWriteToFile": false,
            "requiredFiles": [],
            "ignoreExitCode": false,
            "ignore": []
        }
    },
    "suggest.snippetIndicator": "~",
    
    "pylsp.plugins.pylint.enabled": true,
    "pylsp.commandPath": "/bin/pylsp",
    "pylsp.builtin.installExtrasArgs": [
        "flake8",
        "mccabe",
        "pycodestyle",
        "pydocstyle",
        "pyflakes",
        "pylint",
        "rope"
    ],
    "pylsp.plugins.ruff.exclude": [
        "**/site-packages/**"
    ],
    "pylsp.plugins.flake8.exclude": [
        "**/site-packages/**"
    ],
    "pylsp.plugins.pycodestyle.exclude": [
        "**/site-packages/**"
    ],
    "pylsp.plugins.pycodestyle.maxLineLength": 120,
    "pylsp.plugins.pycodestyle.ignore": [
        "E221",
        "W504"
    ],

    "Lua.runtime.version": "Lua 5.4",
    "Lua.runtime.fileEncoding": "utf8",
    "Lua.addonManager.enable": true,
    "Lua.codeLens.enable": true,
    "Lua.completion.enable": true,
    "Lua.completion.keywordSnippet": "Both",
    "Lua.completion.displayContext": 10,
    "Lua.format.enable": true,
    "Lua.hover.enable": true,
    "Lua.hover.enumsLimit": 5,
    "Lua.hover.viewNumber": true,
    "Lua.hover.viewString": true,
    "Lua.hover.expandAlias": true,
    "Lua.hover.previewFields": 50,
    "Lua.hover.viewStringMax": 1000,
    "Lua.format.defaultConfig": {
        "indent_style": "space",
        "indent_size": 2,
        "quote_style": "double",
        "call_arg_parentheses": "keep",
        "continuation_indent": 8,
        "max_line_length": 120,
        "end_of_line": "unset",
        "trailing_table_separator": "always",
        "detect_end_of_line": true,
        "insert_final_newline": true,
        "space_around_table_field_list": false,
        "space_before_attribute": true,
        "space_before_function_open_parenthesis": false,
        "space_before_function_call_open_parenthesis": false,
        "space_before_closure_open_parenthesis": false,
        "space_before_function_call_single_arg": true,
        "space_before_open_square_bracket": false,
        "space_inside_function_call_parentheses": false,
        "space_inside_function_param_list_parentheses": false,
        "space_inside_square_brackets": false,
        "space_around_table_append_operator": true,
        "ignore_spaces_inside_function_call": true,
        "space_before_inline_comment": true,
        "space_around_math_operator": true,
        "space_after_comma": true,
        "space_after_comma_in_for_statement": true,
        "space_around_concat_operator": true,
        "align_call_args": true,
        "align_function_params": true,
        "align_continuous_assign_statement": true,
        "align_continuous_rect_table_field": true,
        "align_if_branch": false,
        "align_array_table": true,
        "never_indent_before_if_condition": false,
        "never_indent_comment_on_if_branch": false,
        "line_space_after_if_statement": "fixed(0)",
        "line_space_after_do_statement": "fixed(0)",
        "line_space_after_while_statement": "fixed(0)",
        "line_space_after_repeat_statement": "fixed(0)",
        "line_space_after_for_statement": "fixed(0)",
        "line_space_after_local_or_assign_statement": "max(2)",
        "line_space_after_function_statement": "min(2)",
        "line_space_after_expression_statement": "max(2)",
        "line_space_after_comment": "keep",
        "break_all_list_when_line_exceed": true,
        "auto_collapse_lines": false,
        "ignore_space_after_colon": false,
        "remove_call_expression_list_finish_comma": true,
        "end_statement_with_semicolon": "same_line"
    },
    "Lua.workspace.checkThirdParty": false,
    "Lua.workspace.library": [
        // vim.api.nvim_get_runtime_file('', true)
        "/usr/share/nvim/runtime/lua",
        "/usr/share/nvim/runtime/lua/vim",
        "/usr/share/nvim/runtime/lua/vim/lsp",
        "${userHome}/.vim/plugged"
    ],
    "Lua.workspace.ignoreDir": [
        ".vscode",
        ".git"
    ],
    "Lua.diagnostics.globals": [
        "vim"
    ],
    "Lua.runtime.path": [
        "?.lua",
        "?/init.lua",
        "?/lua/?.lua",
        "?.nvim/lua/?.lua"
    ],
    "Lua.diagnostics.workspaceRate": 100,
    "Lua.doc.privateName": [
        "m_*"
    ],
    "Lua.hint.enable": true,

    "rust-analyzer.enable": true,
    "rust-analyzer.updates.channel": "nightly",
    "rust-analyzer.updates.prompt": false,
    "rust-analyzer.updates.checkOnStartup": true,
    "rust-analyzer.numThreads": null,
    "rust-analyzer.checkOnSave": true,
    "rust-analyzer.check.command": "check",
    "rust-analyzer.check.allTargets": true,
    "rust-analyzer.check.features": "all",
    "rust-analyzer.server.path": "${userHome}/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rust-analyzer",
    "rust-analyzer.diagnostics.enable": true,
    "rust-analyzer.diagnostics.disabled": [],
    "rust-analyzer.diagnostics.warningsAsHint": [],
    "rust-analyzer.diagnostics.warningsAsInfo": [],
    "rust-analyzer.diagnostics.experimental.enable": true,
    "rust-analyzer.lens.enable": true,
    "rust-analyzer.lens.location": "above_name",
    "rust-analyzer.lens.debug.enable": true,
    "rust-analyzer.lens.run.enable": true,
    "rust-analyzer.lens.references.adt.enable": false,
    "rust-analyzer.lens.implementations.enable": true,
    "rust-analyzer.lens.references.trait.enable": false,
    "rust-analyzer.lens.references.method.enable": false,
    "rust-analyzer.lens.references.enumVariant.enable": false,
    "rust-analyzer.completion.limit": 500,
    "rust-analyzer.completion.autoself.enable": true,
    "rust-analyzer.completion.autoimport.enable": true,
    "rust-analyzer.completion.postfix.enable": true,
    "rust-analyzer.completion.callable.snippets": "fill_arguments",
    "rust-analyzer.completion.privateEditable.enable": false,
    "rust-analyzer.completion.fullFunctionSignatures.enable": true,
    "rust-analyzer.rustfmt.extraArgs": ["--config-path", "${userHome}/.config/rustfmt/rustfmt.toml"],
    "rust-analyzer.rustfmt.rangeFormatting.enable": true,
    "rust-analyzer.inlayHints.maxLength": 70,
    "rust-analyzer.inlayHints.closureStyle": "rust_analyzer",
    "rust-analyzer.inlayHints.renderColons": true,
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.inlayHints.chainingHints.enable": true,
    "rust-analyzer.inlayHints.implicitDrops.enable": false,
    "rust-analyzer.inlayHints.reborrowHints.enable": "mutable",
    "rust-analyzer.inlayHints.parameterHints.enable": true,
    "rust-analyzer.inlayHints.bindingModeHints.enable": true,
    "rust-analyzer.inlayHints.closingBraceHints.enable": true,
    "rust-analyzer.inlayHints.closingBraceHints.minLines": 3,
    "rust-analyzer.inlayHints.discriminantHints.enable": "always",
    "rust-analyzer.inlayHints.closureCaptureHints.enable": true,
    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "always",
    "rust-analyzer.inlayHints.rangeExclusiveHints.enable": false,
    "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
    "rust-analyzer.inlayHints.expressionAdjustmentHints.mode": "prefer_prefix",
    "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": "reborrow",
    "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": false,
    "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,
    "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
    "rust-analyzer.inlayHints.expressionAdjustmentHints.hideOutsideUnsafe": false,
    "rust-analyzer.hover.links.enable": true,
    "rust-analyzer.hover.documentation.enable": true,
    "rust-analyzer.hover.documentation.keywords.enable": true,
    "rust-analyzer.hover.memoryLayout.enable": true,
    "rust-analyzer.hover.memoryLayout.size": "both",
    "rust-analyzer.hover.memoryLayout.offset": "both",
    "rust-analyzer.hover.memoryLayout.alignment": "both",
    "rust-analyzer.hover.memoryLayout.niches": false,
    "html.format.enable": true,
    "javascript.format.enable": true,
    "typescript.format.enable": true,
    "java.enabled": true,
    "cmake.lsp.enable": true,
    "cmake.lsp.serverPath": "cmake-language-server",
    "cmake.formatter": "cmake-format",
    "cmake.cmakePath": "cmake",
    "json.enable": true,
    "perl.enable": true,
    "yaml.enable": true,
    "snippets.ultisnips.pythonPrompt": false,
    "yank.enableCompletion": true,
    "yank.priority": 80,
    "yank.limit": 50,
    "yank.highlight.enable": true,
    "yank.highlight.duration": 150,
    "yank.list.maxsize": 200,
    "tabnine.priority": 999,
    "tabnine.limit": 10,
    "tabnine.shortcut": "TN",
    "tabnine.binary_path": "",
    "tabnine.enablePreselect": true,
    
    "git.gitlab.hosts": [
        "gitlab.com"
    ],
    "git.remoteName": "origin",
    "git.issueFormat": "[%o/%r] #%i: \"%b\" by %a",
    "git.enableGutters": false,
    "git.realtimeGutters": true,
    "git.signPriority": 10,
    "git.changedSign.text": " ",
    "git.addedSign.text": " ",
    "git.removedSign.text": " ",
    "git.topRemovedSign.text": "‾",
    "git.changeRemovedSign.text": "≃",
    "git.addedSign.hlGroup": "DiffAdd",
    "git.changedSign.hlGroup": "DiffChange",
    "git.removedSign.hlGroup": "DiffDelete",
    "git.topRemovedSign.hlGroup": "DiffDelete",
    "git.changeRemovedSign.hlGroup": "DiffChange",
    "git.stagedDecorator": " ",
    "git.changedDecorator": " ",
    "git.untrackedDecorator": " ",
    "git.conflictedDecorator": " ",
    "git.addGBlameToVirtualText": false,
    "git.branchCharacter": "",
    "git.conflict.enabled": true,
    "git.conflict.current.hlGroup": "DiffChange",
    "git.conflict.incoming.hlGroup": "DiffAdd",
    "git.blameUseRealTime": true,
    "git.addGBlameToBufferVar": true,
    "perl.p::ls.enable": true
}
